name: 'Dependency Check Action'
description: 'Run OWASP Dependency Check on your project'
author: 'Your Name'

inputs:
  project:
    description: 'The name of the project being scanned'
    required: true
    
runs:
  using: 'composite'
  steps:

    - name: list env (ubuntu)
      shell: bash
      run: |
           env

    - name: Run Dependency Check (ubuntu)
      shell: bash
      run: |
           curl -H 'Authorization: token ${{ env.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -o suppression.xml -L 'https://api.github.com/repos/usrbinbrain/odc-action-ubuntu/contents/suppression.xml?ref=feat-action'
           curl -H 'Authorization: token ${{ env.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -o libscan.py -L 'https://api.github.com/repos/usrbinbrain/odc-action-ubuntu/contents/libscan.py?ref=feat-action'
           curl -H 'Authorization: token ${{ env.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -o github_target_libs.json -L 'https://api.github.com/repos/usrbinbrain/odc-action-ubuntu/contents/github_target_libs.json?ref=feat-action'
           curl -H 'Authorization: token ${{ env.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -o granular_odc_suppress.py -L 'https://api.github.com/repos/usrbinbrain/odc-action-ubuntu/contents/granular_odc_suppress.py?ref=feat-action'
           curl -H 'Authorization: token ${{ env.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -o granular_odc_suppress.json -L 'https://api.github.com/repos/usrbinbrain/odc-action-ubuntu/contents/granular_odc_suppress.json?ref=feat-action'
           
           # Exibindo o valor de github.workflow
           echo "Valor de github.workflow: ${{ github.workflow }}"
           echo "Nome do job (ID): ${{ github.job }}"
           # Comparando o valor via if
           if [ "${{ github.workflow }}" == "NomeDoWorkflow" ]; then
             echo "Este é o workflow esperado!"
           else
             echo "Este NÃO é o workflow esperado!"
           fi
           
           docker run --rm \
           -v $(pwd):/src \
           -v $(pwd)/odc-reports:/report \
           gagama/owasp-dependency-check-ubuntu:latest \
           sh -c "python3 /src/granular_odc_suppress.py "${{ inputs.project }}" ; /usr/share/dependency-check/bin/dependency-check.sh --project "${{ inputs.project }}" --scan /src -n --data /dependency-check/data --enableExperimental --suppression /src/suppression.xml --format JSON --out /report ; python3 /usr/local/bin/odc-json-report-to-markdown.py /report/dependency-check-report.json ; python3 /src/libscan.py /report/dependency-check-report.json /src/github_target_libs.json"
  
    - name: Get SCA and LibScan Report
      shell: bash
      run: |
           echo "SCA Vuln 🛡️" >> $GITHUB_STEP_SUMMARY
           cat odc-reports/dependency-check-report.md >> $GITHUB_STEP_SUMMARY
           echo "LibScan 🛡️" >> $GITHUB_STEP_SUMMARY
           cat odc-reports/libscan-report.md >> $GITHUB_STEP_SUMMARY
    
    - name: Send Slack message
      shell: bash
      run: | 

            echo "sending slack message 📩"
            WEBHOOK_URL='https://hooks.slack.com/services/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'
            DATE=$(TZ='America/Sao_Paulo' date +"%H:%M %Y-%m-%d")
            TOOL='LibScan'
            GITHUB_REPO=https://github.com/.../${{ github.event.repository.name }}
            GITHUB_BRANCH=${{ github.head_ref || github.ref_name }}
            FILE_CONTENT="odc-reports/libscan-report.md"
            SUMMARY=https://github.com/.../${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}#summary

            JSON_PAYLOAD=$(cat <<EOF
            {
                "text": "Date: ${DATE#* }\nTime: ${DATE% *}\nTool: $TOOL\nRepository: $GITHUB_REPO\nBranch: $GITHUB_BRANCH\nSummary: $SUMMARY\nLibs found 🟣: $(grep "pkg" "$FILE_CONTENT"|wc -l)\n"
            }
            EOF
            )

            TEMP_JSON=$(mktemp)
            echo "$JSON_PAYLOAD" > "$TEMP_JSON"
            curl -X POST -H 'Content-type: application/json' -d @"$TEMP_JSON" "$WEBHOOK_URL"
    
    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: odc-reports/dependency-check-report.json
